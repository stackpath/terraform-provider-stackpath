// Code generated by go-swagger; DO NOT EDIT.

package network_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteNetworkPolicyParams creates a new DeleteNetworkPolicyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteNetworkPolicyParams() *DeleteNetworkPolicyParams {
	return &DeleteNetworkPolicyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteNetworkPolicyParamsWithTimeout creates a new DeleteNetworkPolicyParams object
// with the ability to set a timeout on a request.
func NewDeleteNetworkPolicyParamsWithTimeout(timeout time.Duration) *DeleteNetworkPolicyParams {
	return &DeleteNetworkPolicyParams{
		timeout: timeout,
	}
}

// NewDeleteNetworkPolicyParamsWithContext creates a new DeleteNetworkPolicyParams object
// with the ability to set a context for a request.
func NewDeleteNetworkPolicyParamsWithContext(ctx context.Context) *DeleteNetworkPolicyParams {
	return &DeleteNetworkPolicyParams{
		Context: ctx,
	}
}

// NewDeleteNetworkPolicyParamsWithHTTPClient creates a new DeleteNetworkPolicyParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteNetworkPolicyParamsWithHTTPClient(client *http.Client) *DeleteNetworkPolicyParams {
	return &DeleteNetworkPolicyParams{
		HTTPClient: client,
	}
}

/* DeleteNetworkPolicyParams contains all the parameters to send to the API endpoint
   for the delete network policy operation.

   Typically these are written to a http.Request.
*/
type DeleteNetworkPolicyParams struct {

	/* NetworkPolicyID.

	   An EdgeCompute network policy ID
	*/
	NetworkPolicyID string

	/* StackID.

	   A stack ID or slug
	*/
	StackID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete network policy params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteNetworkPolicyParams) WithDefaults() *DeleteNetworkPolicyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete network policy params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteNetworkPolicyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete network policy params
func (o *DeleteNetworkPolicyParams) WithTimeout(timeout time.Duration) *DeleteNetworkPolicyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete network policy params
func (o *DeleteNetworkPolicyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete network policy params
func (o *DeleteNetworkPolicyParams) WithContext(ctx context.Context) *DeleteNetworkPolicyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete network policy params
func (o *DeleteNetworkPolicyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete network policy params
func (o *DeleteNetworkPolicyParams) WithHTTPClient(client *http.Client) *DeleteNetworkPolicyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete network policy params
func (o *DeleteNetworkPolicyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkPolicyID adds the networkPolicyID to the delete network policy params
func (o *DeleteNetworkPolicyParams) WithNetworkPolicyID(networkPolicyID string) *DeleteNetworkPolicyParams {
	o.SetNetworkPolicyID(networkPolicyID)
	return o
}

// SetNetworkPolicyID adds the networkPolicyId to the delete network policy params
func (o *DeleteNetworkPolicyParams) SetNetworkPolicyID(networkPolicyID string) {
	o.NetworkPolicyID = networkPolicyID
}

// WithStackID adds the stackID to the delete network policy params
func (o *DeleteNetworkPolicyParams) WithStackID(stackID string) *DeleteNetworkPolicyParams {
	o.SetStackID(stackID)
	return o
}

// SetStackID adds the stackId to the delete network policy params
func (o *DeleteNetworkPolicyParams) SetStackID(stackID string) {
	o.StackID = stackID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteNetworkPolicyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param network_policy_id
	if err := r.SetPathParam("network_policy_id", o.NetworkPolicyID); err != nil {
		return err
	}

	// path param stack_id
	if err := r.SetPathParam("stack_id", o.StackID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
