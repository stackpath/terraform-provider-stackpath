// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/stackpath/terraform-provider-stackpath/v2/stackpath/api/ipam/ipam_models"
)

// UpdateNetworkSubnetReader is a Reader for the UpdateNetworkSubnet structure.
type UpdateNetworkSubnetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkSubnetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkSubnetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateNetworkSubnetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateNetworkSubnetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateNetworkSubnetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateNetworkSubnetOK creates a UpdateNetworkSubnetOK with default headers values
func NewUpdateNetworkSubnetOK() *UpdateNetworkSubnetOK {
	return &UpdateNetworkSubnetOK{}
}

/* UpdateNetworkSubnetOK describes a response with status code 200, with default header values.

UpdateNetworkSubnetOK update network subnet o k
*/
type UpdateNetworkSubnetOK struct {
	Payload *ipam_models.NetworkUpdateNetworkSubnetResponse
}

func (o *UpdateNetworkSubnetOK) Error() string {
	return fmt.Sprintf("[PUT /ipam/v1alpha/stacks/{stack_id}/networks/{network_id}/subnets/{subnet_id}][%d] updateNetworkSubnetOK  %+v", 200, o.Payload)
}
func (o *UpdateNetworkSubnetOK) GetPayload() *ipam_models.NetworkUpdateNetworkSubnetResponse {
	return o.Payload
}

func (o *UpdateNetworkSubnetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ipam_models.NetworkUpdateNetworkSubnetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNetworkSubnetUnauthorized creates a UpdateNetworkSubnetUnauthorized with default headers values
func NewUpdateNetworkSubnetUnauthorized() *UpdateNetworkSubnetUnauthorized {
	return &UpdateNetworkSubnetUnauthorized{}
}

/* UpdateNetworkSubnetUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type UpdateNetworkSubnetUnauthorized struct {
	Payload *ipam_models.APIStatus
}

func (o *UpdateNetworkSubnetUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /ipam/v1alpha/stacks/{stack_id}/networks/{network_id}/subnets/{subnet_id}][%d] updateNetworkSubnetUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateNetworkSubnetUnauthorized) GetPayload() *ipam_models.APIStatus {
	return o.Payload
}

func (o *UpdateNetworkSubnetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ipam_models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNetworkSubnetInternalServerError creates a UpdateNetworkSubnetInternalServerError with default headers values
func NewUpdateNetworkSubnetInternalServerError() *UpdateNetworkSubnetInternalServerError {
	return &UpdateNetworkSubnetInternalServerError{}
}

/* UpdateNetworkSubnetInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type UpdateNetworkSubnetInternalServerError struct {
	Payload *ipam_models.APIStatus
}

func (o *UpdateNetworkSubnetInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /ipam/v1alpha/stacks/{stack_id}/networks/{network_id}/subnets/{subnet_id}][%d] updateNetworkSubnetInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateNetworkSubnetInternalServerError) GetPayload() *ipam_models.APIStatus {
	return o.Payload
}

func (o *UpdateNetworkSubnetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ipam_models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNetworkSubnetDefault creates a UpdateNetworkSubnetDefault with default headers values
func NewUpdateNetworkSubnetDefault(code int) *UpdateNetworkSubnetDefault {
	return &UpdateNetworkSubnetDefault{
		_statusCode: code,
	}
}

/* UpdateNetworkSubnetDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type UpdateNetworkSubnetDefault struct {
	_statusCode int

	Payload *ipam_models.APIStatus
}

// Code gets the status code for the update network subnet default response
func (o *UpdateNetworkSubnetDefault) Code() int {
	return o._statusCode
}

func (o *UpdateNetworkSubnetDefault) Error() string {
	return fmt.Sprintf("[PUT /ipam/v1alpha/stacks/{stack_id}/networks/{network_id}/subnets/{subnet_id}][%d] UpdateNetworkSubnet default  %+v", o._statusCode, o.Payload)
}
func (o *UpdateNetworkSubnetDefault) GetPayload() *ipam_models.APIStatus {
	return o.Payload
}

func (o *UpdateNetworkSubnetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ipam_models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
